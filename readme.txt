Цель: Разработать приложение, периодически удаляющее файлы и директории по заданной маске с учётом их возраста.
Приложение должно быть написано на языке C++
Приложение может быть консольным или иметь графический интерфейс – на усмотрение кандидата
Приложение должно иметь файл конфигурации. Передача пути до файла конфигурации производится либо через командные аргументы, либо по фиксированному имени файла, лежащего в рабочей папке
Формат файла конфигурации – на усмотрение кандидата. Главное условие – возможность интуитивно разобраться с параметрами и изменять их в текстовом редакторе (возможные варианты – .json .ini .xml .txt и т.п.)
В файле конфигурации должны указываться пути (с учётом маски) до удаляемых файлов/директорий. Маски задаются с помощью вайлдкард-символов (? – произвольный символ, * – произвольный набор символов). 
Примеры путей:
./* – все найденные файлы в рабочей директории
C:/Images/?.jpg – все .jpg-файлы внутри C:/Images/, содержащие всего 1 букву в названии
../*/*.jpg – все .jpg-файлы из папок, находящихся на одном уровне с рабочей директорией
В файле конфигурации для каждого пути должен указываться возраст удаляемых файлов (в днях). Расчёт возраста ведётся относительно даты модификации файла
Если после обработки директории в ней не остаётся файлов – сама директория также должна быть удалена
В файле конфигурации должен быть параметр, указывающий на период вызова функции удаления (в миллисекундах)
В файле конфигурации должен быть параметр, указывающий на период вызова функции сканирования. При запуске приложение должно произвести сканирование и удаление объектов, а последующее сканирование должно производиться только после указанного времени (в секундах)
Считывание и обновление всех параметров из файла конфигурации должно происходить при старте программы и перед каждым сканированием 
Результат:
Скомпилированное приложение, выполняемое в среде ОС MS Windows 10 и новее. Запуск приложения должен производиться по двойному клику на .exe/.bat-файл, а это значит, что вместе с приложением должны быть предоставлены все зависимые библиотеки и файл конфигурации (vc redistributable прикладывать не требуется)
При использовании сторонних библиотек необходимо в readme указать ссылки на источники (репозитории git и т.п.)
Исходные коды программы


1. Инструкция по применению
Test.exe - консольное приложение, написанное на C++ 17 в среде MS Visual Studio 2022, полностью ( надеюсь) соответствующее ТЗ.
Для настройки системы используется ini файл. По умолчанию используется config.ini в директории программы. Также можно задать путь к файлу настроек как параметр при запуске:
Test.exe c:\Temp\settings.ini

Пример ini файла:
path = ./*.jpg, 1
path = C:/Images/?.jpg

scan_period_sec = 3600

Параметры path указывают путь к удаляемому файлу или директории. Путь может быть относительным и абсолютным. После него через запятую идет период удаления файла ( в днях). Если период не указан или равен 0, файл будет удален.
scan_period_sec указывает частоту (в секундах) запуска сканирования.

Выход из программы - по комбинации клавиш Ctrl-X, или ввод команды exit

2. Комментарии к разработке.
Для реализации сканирования клавиатуры я организовываю пробуждение программы каждые 50 mS. Вероятно, опрос клавиатуры можно было сделать более эффективным. Но я уже не стал тратить на это время и силы.
В задании явно указано, что программа должна работать только под Windows, поэтому я не стал добиваться многоплатформенности. И ряд функций специфичны для Windows.
Вероятно, программу стоило бы разбить на модули. Но понимание этого пришло лишь по мере разрастания кода. И тоже не стал уже тратить на это время.
Отладку программы я бы назвал черновой. Поэтому заранее прошу прощения за возможнгые баги. Однако основные функции я проверил, и полагаю, сработать она должна.
НАдеюсь, код достаточно закомменнтирован для того, чтобы разобраться в нем не представляло проблем.

 